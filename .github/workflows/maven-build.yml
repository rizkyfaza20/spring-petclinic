# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven for Docker Containers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Generate semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.0.2
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          search_commit_body: true
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 
            ${{ secrets.DOCKER_USERNAME }}/springboot-petclinic-docker:latest , ${{ secrets.DOCKER_USERNAME }}/springboot-petclinic-docker:${{ steps.semver.outputs.version }}

  publish:
    runs-on: ubuntu-latest
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCE_SA_KEY }}'
    
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
    
      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Modify environment variables in docker-compose.yml
        run: |
          sed -i "s|DATABASE_URL=.*|DATABASE_URL=${{ secrets.DATABASE_URL }}|g" docker-compose.yml
          sed -i "s|POSTGRES_USER=.*|POSTGRES_USER=${{ secrets.POSTGRES_USER }}|g" docker-compose.yml
          sed -i "s|POSTGRES_PASSWORD=.*|POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}|g" docker-compose.yml
          sed -i "s|POSTGRES_DB=.*|POSTGRES_DB=${{ secrets.POSTGRES_DB }}|g" docker-compose.yml
          
      - name: scp into GCP instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCE_IP_INSTANCE }}
          username: ${{ secrets.GCE_SSH_USERNAME }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.GCE_SSH_USERNAME }}/"

      - name: SSH into GCP instance and deploy Django
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCE_IP_INSTANCE }}
          username: ${{ secrets.GCE_SSH_USERNAME }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          script: |
            docker compose -f /home/${{ secrets.GCE_SSH_USERNAME }}/docker-compose.yml down
            docker compose -f /home/${{ secrets.GCE_SSH_USERNAME }}/docker-compose.yml build --pull
            docker compose -f /home/${{ secrets.GCE_SSH_USERNAME }}/docker-compose.yml up -d

            docker image prune -f
